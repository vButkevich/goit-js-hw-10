{"version":3,"file":"1-timer-05871a28.js","sources":["../../src/js/1-timer.js"],"sourcesContent":["'use strict';\n\n// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\n\n// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\n{\n  let _selectedDate = new Date();\n  let dateTimePicker = document.getElementById('datetime-picker');\n  let btnStart = document.getElementById('btn-start');\n  btnStart.addEventListener('click', function () {\n    startCountdown(_selectedDate);\n  });\n\n  function ProcessSelectedDate(dateStr, showError = false) {\n    const selectedDate = new Date(dateStr);\n    const currentDate = new Date();\n\n    if (selectedDate >= currentDate) {\n      _selectedDate = selectedDate;\n      btnStart.disabled = false;\n      return;\n    }\n\n    if (selectedDate < currentDate) {\n      btnStart.disabled = true;\n      if (showError)\n        iziToast.error({\n          message: 'Please choose a date in the future!',\n          position: 'topRight',\n          timeout: 2000,\n        });\n      return;\n    }\n  }\n\n  const flatpickr_option = {\n    minDate: 'today',\n    enableTime: true,\n    enableSeconds: true,\n    dateFormat: 'Y-m-d H:i:S',\n    onChange: function (selectedDates, dateStr, instance) {\n      ProcessSelectedDate(dateStr);\n    },\n    onClose: function (selectedDates, dateStr, instance) {\n      ProcessSelectedDate(dateStr, true);\n    },\n  };\n  let flatPicker = flatpickr('#datetime-picker', flatpickr_option);\n\n  const timer = setInterval(function () {\n    flatpickr_option.defaultDate = new Date();\n    flatpickr('#datetime-text', flatpickr_option);\n  }, 1000);\n\n  function startCountdown(selectedDate) {\n    dateTimePicker.disabled = true;\n    btnStart.disabled = true;\n\n    let intervalId = setInterval(function () {\n      const currentDate = new Date();\n      const ms = selectedDate.getTime() - currentDate.getTime();\n      const data = convertMs(ms);\n\n      setHtmlDataValues(data);\n\n      let values = Object.values(data);\n      if (values.every(item => item === 0)) {\n        clearInterval(intervalId);\n        dateTimePicker.value = '';\n        return;\n      }\n    }, 1000);\n  }\n\n  function formatDateTimeValue(value) {\n    let digits = 2;\n    if (value > 100) {\n      digits = 3;\n    }\n    return String(value).padStart(digits, '0');\n  }\n\n  function setHtmlDataValues(data) {\n    document.querySelector('.value[data-days]').innerHTML = formatDateTimeValue(\n      data.days\n    );\n    document.querySelector('.value[data-hours]').innerHTML =\n      formatDateTimeValue(data.hours);\n    document.querySelector('.value[data-minutes]').innerHTML =\n      formatDateTimeValue(data.minutes);\n    document.querySelector('.value[data-seconds]').innerHTML =\n      formatDateTimeValue(data.seconds);\n    return;\n  }\n\n  function convertMs(ms) {\n    // Number of milliseconds per unit of time\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Remaining days\n    const days = Math.floor(ms / day);\n    // Remaining hours\n    const hours = Math.floor((ms % day) / hour);\n    // Remaining minutes\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    // Remaining seconds\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n  }\n  // console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n  // console.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\n  // console.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n}\nconsole.log('1-timer.js - loaded');\n"],"names":["ProcessSelectedDate","dateStr","showError","selectedDate","currentDate","_selectedDate","btnStart","iziToast","startCountdown","dateTimePicker","intervalId","ms","data","convertMs","setHtmlDataValues","item","formatDateTimeValue","value","digits","days","hours","minutes","seconds","flatpickr_option","selectedDates","instance","flatpickr"],"mappings":"2CAYA,CAQE,IAASA,EAAT,SAA6BC,EAASC,EAAY,GAAO,CACvD,MAAMC,EAAe,IAAI,KAAKF,CAAO,EAC/BG,EAAc,IAAI,KAExB,GAAID,GAAgBC,EAAa,CAC/BC,EAAgBF,EAChBG,EAAS,SAAW,GACpB,MACD,CAED,GAAIH,EAAeC,EAAa,CAC9BE,EAAS,SAAW,GAChBJ,GACFK,EAAS,MAAM,CACb,QAAS,sCACT,SAAU,WACV,QAAS,GACnB,CAAS,EACH,MACD,CACF,EAqBQC,EAAT,SAAwBL,EAAc,CACpCM,EAAe,SAAW,GAC1BH,EAAS,SAAW,GAEpB,IAAII,EAAa,YAAY,UAAY,CACvC,MAAMN,EAAc,IAAI,KAClBO,EAAKR,EAAa,QAAS,EAAGC,EAAY,QAAO,EACjDQ,EAAOC,EAAUF,CAAE,EAKzB,GAHAG,EAAkBF,CAAI,EAET,OAAO,OAAOA,CAAI,EACpB,MAAMG,GAAQA,IAAS,CAAC,EAAG,CACpC,cAAcL,CAAU,EACxBD,EAAe,MAAQ,GACvB,MACD,CACF,EAAE,GAAI,CACR,EAEQO,EAAT,SAA6BC,EAAO,CAClC,IAAIC,EAAS,EACb,OAAID,EAAQ,MACVC,EAAS,GAEJ,OAAOD,CAAK,EAAE,SAASC,EAAQ,GAAG,CAC1C,EAEQJ,EAAT,SAA2BF,EAAM,CAC/B,SAAS,cAAc,mBAAmB,EAAE,UAAYI,EACtDJ,EAAK,IACX,EACI,SAAS,cAAc,oBAAoB,EAAE,UAC3CI,EAAoBJ,EAAK,KAAK,EAChC,SAAS,cAAc,sBAAsB,EAAE,UAC7CI,EAAoBJ,EAAK,OAAO,EAClC,SAAS,cAAc,sBAAsB,EAAE,UAC7CI,EAAoBJ,EAAK,OAAO,CAEnC,EAEQC,EAAT,SAAmBF,EAAI,CAQrB,MAAMQ,EAAO,KAAK,MAAMR,EAAK,KAAG,EAE1BS,EAAQ,KAAK,MAAOT,EAAK,MAAO,IAAI,EAEpCU,EAAU,KAAK,MAAQV,EAAK,MAAO,KAAQ,GAAM,EAEjDW,EAAU,KAAK,MAASX,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAQ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACvC,EA1GGjB,EAAgB,IAAI,KACpBI,EAAiB,SAAS,eAAe,iBAAiB,EAC1DH,EAAW,SAAS,eAAe,WAAW,EAClDA,EAAS,iBAAiB,QAAS,UAAY,CAC7CE,EAAeH,CAAa,CAChC,CAAG,EAwBD,MAAMkB,EAAmB,CACvB,QAAS,QACT,WAAY,GACZ,cAAe,GACf,WAAY,cACZ,SAAU,SAAUC,EAAevB,EAASwB,EAAU,CACpDzB,EAAoBC,CAAO,CAC5B,EACD,QAAS,SAAUuB,EAAevB,EAASwB,EAAU,CACnDzB,EAAoBC,EAAS,EAAI,CAClC,CACL,EACmByB,EAAU,mBAAoBH,CAAgB,EAEjD,YAAY,UAAY,CACpCA,EAAiB,YAAc,IAAI,KACnCG,EAAU,iBAAkBH,CAAgB,CAC7C,EAAE,GAAI,CAgET,CACA,QAAQ,IAAI,qBAAqB"}